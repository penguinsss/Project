"""
    类本身也是对象，称为类对象     类对象在定义类时自动创建
    类对象作用:
        1> 用于创建实例对象
        2> 记录数据（类属性）和执行操作（类方法）
    类属性主要用于记录一些类级别的数据

    实例对象和类属性：
        类属性可以被该类的所有对象所共有
        实例对象可以获取类属性，对象名.类属性    但  不能修改，如果有同名的类属性和实例属性, 通过实例对象来获取时, 优先获取的是实例属性

"""


class Dog:
    count = 0  # 定义类属性，通过类对象来获取/修改

    def __init__(self):
        Dog.count += 1


d1 = Dog()
d2 = Dog()
d2.count = 10   # 修改无用，反而是相当于是给d2这个实例对象新添了一个属性
print(d2.count)
print(Dog.count)
